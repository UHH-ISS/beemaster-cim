input {
    file {
        type => "dionaea_connection"
        path => "/var/log/bro-master/dionaea_incident.log"
    }
    file {
        type => "dionaea_access"
        path => "/var/log/bro-master/dionaea_access.log"
    }

    file {
        type => "dionaea_mysql"
        path => "/var/log/bro-master/Dionaea_MySQL.log"
    }

    file {
        type => "dionaea_download_complete"
        path => "/var/log/bro-master/Dionaea_DownloadComplete.log"
    }

    file {
        type => "dionaea_download_offer"
        path => "/var/log/bro-master/Dionaea_DownloadOffer.log"
    }

    file {
        type => "dionaea_smb_request"
        path => "/var/log/bro-master/Dionaea_SMBRequest"
    }

    file {
        type => "dionaea_smb_bind"
        path => "/var/log/bro-master/Dionaea_SBMBind"
    }
}

filter {
    if [message] =~ /^#/ {
        # discard all the bro comments for file structure
        drop {  }
    }
    else {
        if [type] == "dionaea_connection" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\t%{WORD:id}\t%{IP:local_ip}\t%{NUMBER:local_port}\t%{IP:remote_ip}\t%{NUMBER:remote_port}\t%{WORD:transport}\t%{WORD:connector_id}"
                }
            }
        }
        
        if [type] == "dionaea_access" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\t%{IP:dst_ip}\t%{NUMBER:dst_port}\t%{WORD:src_hostname}\t%{IP:src_ip}\t%{NUMBER:src_port}\t%{WORD:transport}\t%{WORD:protocol}\t%{WORD:connector_id}"
                }
            }
        }


        if [type] == "dionaea_mysql" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+(?<command>[^\t]+)\s+%{WORD:connector_id}"
                }
            }
        }

        if [type] == "dionaea_download_complete" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+(?<url>[^\t]+)\s+%{WORD:md5hash}\s+(?<file>[^\t]+)\s+(?<origin>[^\t]+)\s+%{WORD:connector_id}"
                }
            }
        }

        if [type] == "dionaea_download_offer" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+(?<url>[^\t]+)\s+(?<origin>[^\t]+)\s+%{WORD:connector_id}"
                }
            }
        }
        
        if [type] == "dionaea_smb_bind" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+(?<transfersyntax>[^\t]+)\s+%{WORD:uuid}\s+%(?<origin>[^\t]+)\s+%{WORD:connector_id}"
                }
            }
        }
        
        if [type] == "dionaea_smb_request" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+%{NUMBER:opnum}\s+%{WORD:uuid}\s+%{WORD:origin}\s+%{WORD:connector_id}"
                }
            }
        }

        date {
            match => [ "ts", "UNIX" ]
        }
    }
}

output {
    #if "_grokparsefailure" not in [tags] {
    #stdout { codec => rubydebug }
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        flush_size => 1
    }
    #}
}

