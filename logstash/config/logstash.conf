input {
    file {
        type => "dionaea_connection"
        path => "/var/log/bro-master/Dionaea.log"
    }

    file {
        type => "dionaea_mysql"
        path => "/var/log/bro-master/Dionaea_MySQL.log"
}

filter {
    if [message] =~ /^#/ {
        # discard all the bro comments for file structure
        drop {  }
    }
    else {
        if [type] == "dionaea_connection" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+%{WORD:connector_id}"
                }
            }
        }
        if [type] == "dionaea_mysql" {
            grok {
                match => {
                    "message" => "%{NUMBER:ts}\s+%{WORD:id}\s+%{IP:local_ip}\s+%{NUMBER:local_port}\s+%{IP:remote_ip}\s+%{NUMBER:remote_port}\s+%{WORD:transport}\s+%{WORD:command}\s+%{WORD:connector_id}"
                }
            }
        }
        date {
            match => [ "ts", "UNIX" ]
        }
    }
}

output {
    #if "_grokparsefailure" not in [tags] {
    #stdout { codec => rubydebug }
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        flush_size => 1
    }
    #}
}

